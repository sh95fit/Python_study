# 딕셔너리
'''
딕셔너리의 특징
시퀀스 자료형 (순서가 존재!)
키와 데이터를 가지고 있는 사전형 자료형
사전형태의 자료를 만들 때 편리

딕셔너리 형태
딕셔너리 = {키1 : 데이터1, 키2 : 데이터2}
데이터 형태는 튜플, 리스트, 자료형 값 모두 적용 가능

딕셔너리 접근 방법
딕셔너리["키"]  -> 키 값에 해당하는 데이터 

딕셔너리 할당 방법
딕셔너리["키"] = 데이터

딕셔너리 삭제 방법
del 딕셔너리["키"]

딕셔너리 함수
딕셔너리 = {
    키1 : 데이터1
    키2 : 데이터2
    키3 : 데이터3
}

딕셔너리 함수에 대한 호출
키와 데이터 쌍 : 딕셔너리.items()
키 : 딕셔너리.keys()
데이터 : 딕셔너리.values()

중첩 딕셔너리
딕셔너리 내 또 다른 딕셔너리 지정 가능
딕셔너리1 = {
    "키" = {딕셔너리2}
}
'''

# 실습

# 딕셔너리 - 사전 형태의 자료형

#딕셔너리 만들기
stock_a = {"삼성전자" : 82000, "LG전자" : 150000}

stock_b = {
    "삼성전자" : [81000, 81500, 8200, 83000, 85000],
    "LG전자" : (150000, 152000, 151000, 153000, 149000),
}
stock_c = {
    "삼성전자" : {
        "현재가" : 82000,
        "보유수량" : 5,
        "매수단가" : 81000
    }
}

print(stock_a)
print(stock_b)
print(stock_c)


#딕셔너리 접근하기
print(stock_a["삼성전자"])
print(stock_c["삼성전자"]["보유수량"])

#딕셔너리 할당하기
stock_a["삼성전자"] = 81111
print(stock_a)

#딕셔너리 삭제하기
del stock_a["LG전자"]
print(stock_a)

#딕셔너리 함수
stock_d = {
    "삼성전자" : 85000,
    "SK하이닉스" : 123000,
    "NAVER" : 370000,
    "카카오" : 133000
}

#items() : 키와 데이터 쌍
print(stock_d.items())

for item in stock_d.items() :
    print(item)

for item in stock_d.items():
    print(item[1])      # 키 혹은 데이터만 출력하고 싶은 경우 인덱싱

#keys() : 키
for key in stock_d.keys() :
    print(key)

#valuse() : 데이터
for value in stock_d.values() :
    print(value)